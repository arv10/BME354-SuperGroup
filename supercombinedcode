// Amended Heat control function (Safety)

#include <LiquidCrystal.h>
LiquidCrystal lcd(8, 9, 4, 5, 6, 7);

int heaterPin = 13;
int tempPin = 1;
double setTemp = 23; // temp threshold in Celsius
double settemperature=0;
int lcd_key = 0;
int adc_key_in = 0;
int digit[] = {0, 0, 0, 0}; 
int cursorPos = 1;
int check_key = 0;
int dachecks=0;

#define btnRIGHT 0
#define btnUP 1
#define btnDOWN 2
#define btnLEFT 3
#define btnSELECT 4
#define btnNONE 5

#define V1 0+50
#define V2 99+50
#define V3 255+50
#define V4 409+50
#define V5 639+50
#define VNONE 1023

int read_LCD_buttons()
{
  adc_key_in = analogRead(0);    // read the value from the sensor
  if (adc_key_in > VNONE) return btnNONE;
  if (adc_key_in < V1) return btnRIGHT;
  if (adc_key_in < V2) return btnUP;
  if (adc_key_in < V3) return btnDOWN;
  if (adc_key_in < V4) return btnLEFT;
  if (adc_key_in < V5) return btnSELECT;
  return btnNONE;        // when all others fail, return this...
}

void setup()
{
  lcd.begin(16,2);
  pinMode(heaterPin,OUTPUT); // heaterPin is set as an output
  lcd.setCursor(0,0);
  lcd.print("Set Temperature");
  lcd.setCursor(0,1); 
  lcd.print(digit[0]);
  lcd.print(digit[1]);
  lcd.print(digit[2]);
  lcd.print("."); 
  lcd.print(digit[3]);
}

double setthetemperature()
{
int checkck = 0;
while (checkck == 0)
{
  lcd_key = read_LCD_buttons();    // read the buttons
switch (lcd_key)   
{
// depending on which button was pushed, we perform an act:
  case btnRIGHT:
    {
    // Instructions for what to do on RIGHT button press
      if (cursorPos < 4)
      {
        if (cursorPos == 2)
        {
           cursorPos = cursorPos + 2;
        }
        else
        {
           cursorPos = cursorPos + 1;
        }
      }
      else if (cursorPos == 4)
      {
        cursorPos = 0;
      }
      lcd.setCursor(cursorPos,1);
      break;
    }
  case btnLEFT:
    {
    if (cursorPos > 0)
      {
        if (cursorPos == 4)
        {
           cursorPos = cursorPos - 2;
        }
        else
        {
           cursorPos = cursorPos - 1;
        }
      }
    else if (cursorPos == 0) 
    {
      cursorPos = 4; 
    }  
      lcd.setCursor(cursorPos,1);
      break; 
    }
  case btnUP:
    {
      lcd.setCursor(cursorPos,1);
      int max = 9;
      if (cursorPos == 4)
      {
        if (digit[cursorPos-1] < max)
        {
          digit[cursorPos-1] = digit[cursorPos-1] + 1;
          lcd.print(digit[cursorPos-1]);
        }
        else
        {
          digit[cursorPos-1] = 0;
          lcd.print(digit[cursorPos-1]);
        }
      }
      else
      {
        if (digit[cursorPos] < 9)
        {
          digit[cursorPos] = digit[cursorPos] + 1;
          lcd.print(digit[cursorPos]);
        }
        else
        {
          digit[cursorPos] = 0;
          lcd.print(digit[cursorPos]);
        }
      }
      break;
    }
  case btnDOWN:
    {
      lcd.setCursor(cursorPos,1);
      int max = 9;
      
      if (cursorPos == 4)
      { 
        if (digit[cursorPos-1] == 0)
        {
          digit[cursorPos-1] = max;
          lcd.print(digit[cursorPos-1]);
        }
        else if (digit[cursorPos-1] <= max)
        {
          digit[cursorPos-1] = digit[cursorPos-1] - 1;
          lcd.print(digit[cursorPos-1]);
        }
      }
      else
      {
        if (digit[cursorPos] == 0)
        {
          digit[cursorPos] = 9;
          lcd.print(digit[cursorPos]);
        }
        else if (digit[cursorPos] <= 9)
        {
          digit[cursorPos] = digit[cursorPos] - 1;
          lcd.print(digit[cursorPos]);
        }
      }
      break;
    }
    case btnSELECT:
    {
      int checker=0;
      int high = 300;
      int low = 20;
      double settemperature = 100*digit[0]+10*digit[1]+digit[2]+.1*digit[3];
      lcd.setCursor(0,0);
      lcd.println("The Temperature ");
      if (settemperature > high)
      {
        lcd.setCursor(0,1);
        lcd.println("is Too HIGH    ");
      }
      else if (settemperature < low)
      {
        lcd.setCursor(0,1);
        lcd.println("is Too LOW     ");
      }
      else
      {
  checker = 1;
	checkck = 1;
        lcd.setCursor(0,1);
        lcd.print("is ");
        lcd.print(digit[0]);
        lcd.print(digit[1]);
        lcd.print(digit[2]);
        lcd.print('.');
        lcd.print(digit[3]);
	lcd.print("      ");
      }
      int pause = 1;
      while (pause == 1) 
      {
                      delay(100);
                      check_key = 0;
                      check_key = read_LCD_buttons();
                      
                      if (check_key == 4) 
                        {
			if (checker == 0)
			{
                        pause = pause + 1;
                        lcd.setCursor(0,0);
  			lcd.print("Set Temperature");
  			lcd.setCursor(0,1); 
  			lcd.print(digit[0]);
  			lcd.print(digit[1]);
  			lcd.print(digit[2]);
			lcd.print('.'); 
  			lcd.print(digit[3]);
  			lcd.print("                      ");
			}
			else
			{
				break;
			}
                         }
  	}
      
    }
    case btnNONE:
    {
    // Instructions for what to do if no button is pressed.
     lcd.setCursor(cursorPos,1);
     lcd.print(" ");
     delay(100);
    
    lcd.setCursor(cursorPos,1);
    if (cursorPos > 2)
    {
      lcd.print(digit[cursorPos-1]);
    }
    else
    {
      lcd.print(digit[cursorPos]);
    }  
    }
}
delay(200);
}
return settemperature;
}

void heaterdisplay(setTemp)
{
  int currentTemp = analogRead(tempPin);
  float TempVolt = currentTemp*(5/1023);
  float TempCelsius = TempVolt/(0.005); // test linear relationship
  
  if (TempCelsius < setTemp) {
     digitalWrite(heaterPin,HIGH); }
  else {
     digitalWrite(heaterPin,LOW); }
     
     lcd.setCursor(0,0);
     lcd.print("Current T:");
     lcd.print(TempCelsius);
     lcd.print("C");
     lcd.setCursor(0,1);
     lcd.print("Set T:");
     lcd.print(setTemp);
     lcd.print("C");
     return void
}

void heatersaftey(setTemp)
{
 int currentTemp = analogRead(tempPin);
  float TempVolt = currentTemp*(5/1023);
  float TempCelsius = TempVolt/(0.005); // test linear relationship
  
  if (TempCelsius < setTemp) {
     digitalWrite(heaterPin,HIGH);
     lcd.setCursor(0,0);
     lcd.print("Heater ON!"); }
  else {
     digitalWrite(heaterPin,LOW);
     lcd.setCursor(0,0);
     lcd.print("Heater OFF"); }
   
  while (TempCelsius >= 300) {
     lcd.setCursor(0,0);
     lcd.print("RUN AWAY!!");
     lcd.setCursor(0,1);
     lcd.print("Critical Temp!"); 
     currentTemp = analogRead(tempPin);
     TempVolt = currentTemp*(5/1023);
     TempCelsius = TempVolt/(0.005);
     delay(1000);}
}


void loop()
{
  if (dachecks == 0)
  {
	setTemp=setthetemperature();
  dachecks=1;
  }
  else 
  {
	setTemp=setTemp;
  }

  lcd.setCursor(0,0);
  lcd.print("               ");
  lcd.setCursor(0,1);
  lcd.print("               ");
  heaterdisplay(setTemp);
  delay(500);
  heatersaftey(setTemp);
  delay(500);
  
  
}
