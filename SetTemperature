#include <LiquidCrystal.h>

// select the pins used on the LCD panel
LiquidCrystal lcd(8, 9, 4, 5, 6, 7);

// define some values used by the panel and buttons
int lcd_key = 0;
int adc_key_in = 0;
int digit[] = {0, 0, 0, 0}; 
int cursorPos = 1;
int check_key = 0;

#define btnRIGHT 0
#define btnUP 1
#define btnDOWN 2
#define btnLEFT 3
#define btnSELECT 4
#define btnNONE 5

#define V1 0+50
#define V2 99+50
#define V3 255+50
#define V4 409+50
#define V5 639+50
#define VNONE 1023

// read the buttons
int read_LCD_buttons()
{
  adc_key_in = analogRead(0);    // read the value from the sensor
  if (adc_key_in > VNONE) return btnNONE;
  if (adc_key_in < V1) return btnRIGHT;
  if (adc_key_in < V2) return btnUP;
  if (adc_key_in < V3) return btnDOWN;
  if (adc_key_in < V4) return btnLEFT;
  if (adc_key_in < V5) return btnSELECT;
  return btnNONE;        // when all others fail, return this...
}

void setup()
{
  lcd.begin(16, 2);      // start the library
  lcd.print("Set Temperature");
  lcd.setCursor(0,1); 
  lcd.print(digit[0]);
  lcd.print(digit[1]);
  lcd.print(digit[2]);
  lcd.print('.'); 
  lcd.print(digit[3]);
}

void loop()
{
  lcd_key = read_LCD_buttons();    // read the buttons
switch (lcd_key)   
{
// depending on which button was pushed, we perform an act:
  case btnRIGHT:
    {
    // Instructions for what to do on RIGHT button press
      if (cursorPos < 4)
      {
        if (cursorPos == 2)
        {
           cursorPos = cursorPos + 2;
        }
        else
        {
           cursorPos = cursorPos + 1;
        }
      }
      else if (cursorPos == 4)
      {
        cursorPos = 0;
      }
      lcd.setCursor(cursorPos,1);
      break;
    }
  case btnLEFT:
    {
    if (cursorPos > 0)
      {
        if (cursorPos == 4)
        {
           cursorPos = cursorPos - 2;
        }
        else
        {
           cursorPos = cursorPos - 1;
        }
      }
    else if (cursorPos == 0) 
    {
      cursorPos = 4; 
    }  
      lcd.setCursor(cursorPos,1);
      break; 
    }
  case btnUP:
    {
      lcd.setCursor(cursorPos,1);
      int max = 9;
      if (cursorPos == 3)
      {
        if (digit[cursorPos-1] < max)
        {
          digit[cursorPos-1] = digit[cursorPos-1] + 1;
          lcd.print(digit[cursorPos-1]);
        }
        else
        {
          digit[cursorPos-1] = 0;
          lcd.print(digit[cursorPos-1]);
        }
      }
      else
      {
        if (digit[cursorPos] < 9)
        {
          digit[cursorPos] = digit[cursorPos] + 1;
          lcd.print(digit[cursorPos]);
        }
        else
        {
          digit[cursorPos] = 0;
          lcd.print(digit[cursorPos]);
        }
      }
      break;
    }
  case btnDOWN:
    {
      lcd.setCursor(cursorPos,1);
      int max = 9;
      
      if (cursorPos == 3)
      { 
        if (digit[cursorPos-1] == 0)
        {
          digit[cursorPos-1] = max;
          lcd.print(digit[cursorPos-1]);
        }
        else if (digit[cursorPos-1] <= max)
        {
          digit[cursorPos-1] = digit[cursorPos-1] - 1;
          lcd.print(digit[cursorPos-1]);
        }
      }
      else
      {
        if (digit[cursorPos] == 0)
        {
          digit[cursorPos] = 9;
          lcd.print(digit[cursorPos]);
        }
        else if (digit[cursorPos] <= 9)
        {
          digit[cursorPos] = digit[cursorPos] - 1;
          lcd.print(digit[cursorPos]);
        }
      }
      break;
    }
    case btnSELECT:
    {
      int high = 300;
      int low = 20;
      float settemperature = 100*digit[0]+10*digit[1]+digit[2]+.1*digit[3];
      lcd.setCursor(0,0);
      lcd.print('Set Temperature is:');
      if (settemperature > high)
      {
        lcd.setCursor(0,1);
        lcd.print('Too HIGH');
      }
      else if (settemperature < low)
      {
        lcd.setCursor(0,1);
        lcd.print('Too LOW');
      }
      else
      {
        lcd.setCursor(0,1);
        lcd.print(settemperature);
      }
      
    }
}
delay(200);
}
